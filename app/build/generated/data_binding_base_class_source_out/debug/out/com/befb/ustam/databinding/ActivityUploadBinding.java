// Generated by view binder compiler. Do not edit!
package com.befb.ustam.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.befb.ustam.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUploadBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AutoCompleteTextView autoCompleteTxt;

  @NonNull
  public final EditText commentText;

  @NonNull
  public final Spinner spinner;

  @NonNull
  public final TextInputLayout textInputLayout3;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView7;

  @NonNull
  public final Button uploadButton;

  private ActivityUploadBinding(@NonNull ConstraintLayout rootView,
      @NonNull AutoCompleteTextView autoCompleteTxt, @NonNull EditText commentText,
      @NonNull Spinner spinner, @NonNull TextInputLayout textInputLayout3,
      @NonNull TextView textView, @NonNull TextView textView7, @NonNull Button uploadButton) {
    this.rootView = rootView;
    this.autoCompleteTxt = autoCompleteTxt;
    this.commentText = commentText;
    this.spinner = spinner;
    this.textInputLayout3 = textInputLayout3;
    this.textView = textView;
    this.textView7 = textView7;
    this.uploadButton = uploadButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUploadBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUploadBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_upload, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUploadBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.autoComplete_txt;
      AutoCompleteTextView autoCompleteTxt = ViewBindings.findChildViewById(rootView, id);
      if (autoCompleteTxt == null) {
        break missingId;
      }

      id = R.id.commentText;
      EditText commentText = ViewBindings.findChildViewById(rootView, id);
      if (commentText == null) {
        break missingId;
      }

      id = R.id.spinner;
      Spinner spinner = ViewBindings.findChildViewById(rootView, id);
      if (spinner == null) {
        break missingId;
      }

      id = R.id.textInputLayout3;
      TextInputLayout textInputLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout3 == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView7;
      TextView textView7 = ViewBindings.findChildViewById(rootView, id);
      if (textView7 == null) {
        break missingId;
      }

      id = R.id.uploadButton;
      Button uploadButton = ViewBindings.findChildViewById(rootView, id);
      if (uploadButton == null) {
        break missingId;
      }

      return new ActivityUploadBinding((ConstraintLayout) rootView, autoCompleteTxt, commentText,
          spinner, textInputLayout3, textView, textView7, uploadButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
